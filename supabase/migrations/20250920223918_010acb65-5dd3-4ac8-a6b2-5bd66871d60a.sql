-- Continuar migración completa - Listas Negras y Localizaciones

-- Tabla de Listas Negras
CREATE TABLE IF NOT EXISTS public.ListasNegras(
	"IdListaNegra" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"IdUsuario" integer NOT NULL,
	"Fecha" timestamptz NOT NULL,
	"Descripcion" text NOT NULL,
	"RegID" uuid DEFAULT gen_random_uuid() NOT NULL,
	CONSTRAINT "PK_ListasNegras" PRIMARY KEY ("IdListaNegra")
);

-- Tabla de Notas de Listas Negras
CREATE TABLE IF NOT EXISTS public.NotasListasNegras(
	"IdNotaListaNegra" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"IdListaNegra" integer NOT NULL,
	"IdUsuario" integer NOT NULL,
	"Fecha" timestamptz NOT NULL,
	"TipoDescripcion" integer NOT NULL,
	"Descripcion" text NOT NULL,
	"RegID" uuid DEFAULT gen_random_uuid() NOT NULL,
	CONSTRAINT "PK_NotasListasNegras" PRIMARY KEY ("IdNotaListaNegra")
);

-- Tabla de Localizaciones 
CREATE TABLE IF NOT EXISTS public.Localizaciones(
	"IdLocalizacion" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"IdCuenta" integer NOT NULL,
	"IdMunicipio" integer NOT NULL,
	"Sector" varchar(128) NULL,
	"SubSector" varchar(128) NULL,
	"Calle" varchar(64) NULL,
	"ReferenciaLocalidad" text NULL,
	"Latitud" double precision NULL,
	"Longitud" double precision NULL,
	"RegID" uuid DEFAULT gen_random_uuid() NOT NULL,
	CONSTRAINT "PK_Localizaciones" PRIMARY KEY ("IdLocalizacion")
);

-- Tabla de Grupos (para roles y permisos)
CREATE TABLE IF NOT EXISTS public.Grupos(
	"IDGrupo" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"NombreGrupo" varchar(64) NOT NULL,
	"RegID" uuid DEFAULT gen_random_uuid() NOT NULL,
	CONSTRAINT "PK_Grupos" PRIMARY KEY ("IDGrupo")
);

-- Tabla de Grupos Roles
CREATE TABLE IF NOT EXISTS public.GruposRoles(
	"IDGrupoRol" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"IDGrupo" integer NOT NULL,
	"NombreRol" varchar(64) NOT NULL,
	"RegID" uuid DEFAULT gen_random_uuid() NOT NULL,
	CONSTRAINT "PK_GruposRoles" PRIMARY KEY ("IDGrupoRol")
);

-- Tabla de Llaves (autorizaciones temporales)
CREATE TABLE IF NOT EXISTS public.LLaves(
	"IDLLave" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"UserNameUsuario" varchar(50) NULL,
	"NombreUsuario" varchar(50) NULL,
	"UserNameSupervisor" varchar(50) NOT NULL,
	"Accion" integer NOT NULL,
	"FechaCreacion" timestamptz DEFAULT now() NOT NULL,
	"FechaExpiracion" timestamptz NOT NULL,
	"Activo" boolean NOT NULL DEFAULT true,
	"IDReg" uuid NULL,
	"Referencia" varchar(18) NULL,
	"ValorDecimal" numeric(18,2) NULL,
	CONSTRAINT "PK_LLaves" PRIMARY KEY ("IDLLave")
);

-- Habilitar RLS
ALTER TABLE public.ListasNegras ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.NotasListasNegras ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.Localizaciones ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.Grupos ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.GruposRoles ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.LLaves ENABLE ROW LEVEL SECURITY;

-- Políticas de seguridad
CREATE POLICY "ListasNegras visibles para usuarios autenticados" ON public.ListasNegras FOR SELECT USING (auth.uid() IS NOT NULL);
CREATE POLICY "Usuarios pueden crear listas negras" ON public.ListasNegras FOR INSERT WITH CHECK (auth.uid() IS NOT NULL);

CREATE POLICY "NotasListasNegras visibles para usuarios autenticados" ON public.NotasListasNegras FOR SELECT USING (auth.uid() IS NOT NULL);
CREATE POLICY "Usuarios pueden crear notas listas negras" ON public.NotasListasNegras FOR INSERT WITH CHECK (auth.uid() IS NOT NULL);

CREATE POLICY "Localizaciones visibles para usuarios autenticados" ON public.Localizaciones FOR SELECT USING (auth.uid() IS NOT NULL);
CREATE POLICY "Usuarios pueden crear localizaciones" ON public.Localizaciones FOR INSERT WITH CHECK (auth.uid() IS NOT NULL);

CREATE POLICY "Grupos visibles para usuarios autenticados" ON public.Grupos FOR SELECT USING (auth.uid() IS NOT NULL);
CREATE POLICY "GruposRoles visibles para usuarios autenticados" ON public.GruposRoles FOR SELECT USING (auth.uid() IS NOT NULL);
CREATE POLICY "LLaves visibles para usuarios autenticados" ON public.LLaves FOR SELECT USING (auth.uid() IS NOT NULL);

-- Relaciones
ALTER TABLE public.NotasListasNegras ADD CONSTRAINT "FK_NotasListasNegras_ListasNegras" 
  FOREIGN KEY ("IdListaNegra") REFERENCES public.ListasNegras ("IdListaNegra") ON DELETE CASCADE;

ALTER TABLE public.Localizaciones ADD CONSTRAINT "FK_Localizaciones_Cuentas" 
  FOREIGN KEY ("IdCuenta") REFERENCES public.Cuentas ("IdCuenta") ON DELETE CASCADE;

ALTER TABLE public.Localizaciones ADD CONSTRAINT "FK_Localizaciones_Municipios" 
  FOREIGN KEY ("IdMunicipio") REFERENCES public.Municipios ("IdMunicipio");

ALTER TABLE public.GruposRoles ADD CONSTRAINT "FK_GruposRoles_Grupos" 
  FOREIGN KEY ("IDGrupo") REFERENCES public.Grupos ("IDGrupo") ON DELETE CASCADE;