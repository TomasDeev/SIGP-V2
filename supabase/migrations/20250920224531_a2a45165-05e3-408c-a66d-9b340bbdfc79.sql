-- Migración final - Completar tablas restantes importantes

-- Tabla de Alertas y sus detalles
CREATE TABLE IF NOT EXISTS public.Alertas(
	"IdAlerta" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"IdUsuario" integer NOT NULL,
	"Fecha" timestamptz NOT NULL DEFAULT now(),
	"Descripcion" text NOT NULL,
	"Restringir" boolean NOT NULL DEFAULT false,
	"RegID" uuid DEFAULT gen_random_uuid() NOT NULL,
	CONSTRAINT "PK_Alertas" PRIMARY KEY ("IdAlerta")
);

CREATE TABLE IF NOT EXISTS public.AlertasDetalles(
	"IdAlertaDetalle" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"IdAlerta" integer NOT NULL,
	"IdRestriccion" integer NOT NULL,
	"Valor" varchar(64) NOT NULL,
	"RegID" uuid DEFAULT gen_random_uuid() NOT NULL,
	CONSTRAINT "PK_AlertasDetalles" PRIMARY KEY ("IdAlertaDetalle")
);

-- Tabla de Empresas de Servicios
CREATE TABLE IF NOT EXISTS public.EmpresasDeServicios(
	"IdEmpresaDeServicio" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"Nombre" varchar(32) NOT NULL,
	"TipoEmpresaDeServicio" integer NOT NULL DEFAULT 1,
	"IdMunicipio" integer NOT NULL,
	"Sector" varchar(48) NULL,
	"Calle" varchar(48) NULL,
	"Contacto" varchar(32) NULL,
	"RNC" varchar(11) NOT NULL,
	"Telefono1" varchar(20) NOT NULL,
	"Telefono2" varchar(20) NULL,
	"RegID" uuid DEFAULT gen_random_uuid() NOT NULL,
	CONSTRAINT "PK_EmpresasDeServicios" PRIMARY KEY ("IdEmpresaDeServicio")
);

CREATE TABLE IF NOT EXISTS public.EmpresaServiciosEnEmpresas(
	"IdEmpresa" integer NOT NULL,
	"IdEmpresaDeServicio" integer NOT NULL,
	CONSTRAINT "PK_EmpresaServiciosEnEmpresas" PRIMARY KEY ("IdEmpresa", "IdEmpresaDeServicio")
);

-- Tabla de GPS
CREATE TABLE IF NOT EXISTS public.Gps(
	"IdGPS" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"Nombre" varchar(64) NOT NULL,
	"Precio" numeric(18,2) NOT NULL DEFAULT 0,
	"RegID" uuid DEFAULT gen_random_uuid() NOT NULL,
	CONSTRAINT "PK_Gps" PRIMARY KEY ("IdGPS")
);

-- Insertar GPS básicos
INSERT INTO public.Gps ("Nombre", "Precio") VALUES 
('Sistema GPS Básico', 500.00),
('GPS Avanzado con Alarma', 800.00),
('GPS Premium con Corte de Motor', 1200.00)
ON CONFLICT DO NOTHING;

-- Tabla de Préstamos Classes (clasificación de préstamos)
CREATE TABLE IF NOT EXISTS public.PrestamoClases(
	"IdClasePrestamo" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"Nombre" varchar(64) NOT NULL,
	"Descripcion" varchar(256) NULL,
	"RegID" uuid DEFAULT gen_random_uuid() NOT NULL,
	CONSTRAINT "PK_PrestamoClases" PRIMARY KEY ("IdClasePrestamo")
);

-- Insertar clases de préstamos básicas
INSERT INTO public.PrestamoClases ("Nombre", "Descripcion") VALUES 
('Clase A', 'Préstamos de bajo riesgo'),
('Clase B', 'Préstamos de riesgo medio'),
('Clase C', 'Préstamos de alto riesgo'),
('Especial', 'Préstamos con condiciones especiales')
ON CONFLICT DO NOTHING;

-- Tabla de Historias de Préstamos
CREATE TABLE IF NOT EXISTS public.PrestamoHistorias(
	"IdPrestamoHistoria" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"IdPrestamo" integer NOT NULL,
	"IdUsuario" integer NOT NULL,
	"Fecha" timestamptz NOT NULL DEFAULT now(),
	"Descripcion" text NOT NULL,
	"TipoHistoria" integer NOT NULL DEFAULT 1,
	"Contactado" integer NOT NULL DEFAULT 0,
	"RegID" uuid DEFAULT gen_random_uuid() NOT NULL,
	CONSTRAINT "PK_PrestamoHistorias" PRIMARY KEY ("IdPrestamoHistoria")
);

-- Tabla de Ofertas
CREATE TABLE IF NOT EXISTS public.Ofertas(
	"IdOferta" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"IdEmpresa" integer NOT NULL,
	"Nombre" varchar(64) NOT NULL,
	"Descripcion" text NOT NULL,
	"FechaInicio" timestamptz NOT NULL,
	"FechaFin" timestamptz NOT NULL,
	"Activo" boolean NOT NULL DEFAULT true,
	"RegID" uuid DEFAULT gen_random_uuid() NOT NULL,
	CONSTRAINT "PK_Ofertas" PRIMARY KEY ("IdOferta")
);

-- Tabla ELMAH para manejo de errores
CREATE TABLE IF NOT EXISTS public.ELMAH_Error(
	"ErrorId" uuid NOT NULL DEFAULT gen_random_uuid(),
	"Application" varchar(60) NOT NULL,
	"Host" varchar(50) NOT NULL,
	"Type" varchar(100) NOT NULL,
	"Source" varchar(60) NOT NULL,
	"Message" varchar(500) NOT NULL,
	"User" varchar(50) NOT NULL,
	"StatusCode" integer NOT NULL,
	"TimeUtc" timestamptz NOT NULL DEFAULT now(),
	"Sequence" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"AllXml" text NOT NULL,
	CONSTRAINT "PK_ELMAH_Error" PRIMARY KEY ("ErrorId")
);

-- Habilitar RLS en todas las nuevas tablas
ALTER TABLE public.Alertas ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.AlertasDetalles ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.EmpresasDeServicios ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.EmpresaServiciosEnEmpresas ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.Gps ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.PrestamoClases ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.PrestamoHistorias ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.Ofertas ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.ELMAH_Error ENABLE ROW LEVEL SECURITY;

-- Crear políticas básicas para las nuevas tablas
CREATE POLICY "Alertas visibles para usuarios autenticados" ON public.Alertas FOR SELECT USING (auth.uid() IS NOT NULL);
CREATE POLICY "AlertasDetalles visibles para usuarios autenticados" ON public.AlertasDetalles FOR SELECT USING (auth.uid() IS NOT NULL);
CREATE POLICY "EmpresasDeServicios visibles para usuarios autenticados" ON public.EmpresasDeServicios FOR SELECT USING (auth.uid() IS NOT NULL);
CREATE POLICY "EmpresaServiciosEnEmpresas visibles para usuarios autenticados" ON public.EmpresaServiciosEnEmpresas FOR SELECT USING (auth.uid() IS NOT NULL);
CREATE POLICY "Gps visibles para todos" ON public.Gps FOR SELECT USING (true);
CREATE POLICY "PrestamoClases visibles para todos" ON public.PrestamoClases FOR SELECT USING (true);
CREATE POLICY "PrestamoHistorias visibles para usuarios autenticados" ON public.PrestamoHistorias FOR SELECT USING (auth.uid() IS NOT NULL);
CREATE POLICY "Ofertas visibles para usuarios autenticados" ON public.Ofertas FOR SELECT USING (auth.uid() IS NOT NULL);
CREATE POLICY "ELMAH_Error visibles para usuarios autenticados" ON public.ELMAH_Error FOR SELECT USING (auth.uid() IS NOT NULL);