-- Continuar migrando tablas importantes del sistema SIGP

-- Tabla de Auditorias (muy importante para trazabilidad)
CREATE TABLE IF NOT EXISTS public.Auditorias(
	"IDAuditoria" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"Logs" text NOT NULL,
	"Fecha" timestamptz NOT NULL,
	"UsuarioApp" varchar(64) NOT NULL,
	"UsuarioDom" varchar(64) NOT NULL,
	"TerminalDom" varchar(64) NOT NULL,
	"IP" varchar(64) NOT NULL,
	"Transaccion" uuid NOT NULL,
	CONSTRAINT "PK_Auditorias" PRIMARY KEY ("IDAuditoria")
);

-- Tabla de Bancos
CREATE TABLE IF NOT EXISTS public.Bancos(
	"IdBanco" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"Nombre" varchar(50) NOT NULL,
	"isNotLock" boolean NOT NULL DEFAULT true,
	"imgUrl" text NOT NULL DEFAULT '',
	"RegID" uuid DEFAULT gen_random_uuid() NOT NULL,
	CONSTRAINT "PK_Bancos" PRIMARY KEY ("IdBanco")
);

-- Insertar bancos principales de RD
INSERT INTO public.Bancos ("Nombre", "isNotLock", "imgUrl") VALUES 
('Banco Popular Dominicano', true, ''),
('Banco de Reservas', true, ''),
('Banco BHD León', true, ''),
('Banco Scotiabank', true, ''),
('Banco Promerica', true, ''),
('Banco Caribe', true, ''),
('Banco Santa Cruz', true, '')
ON CONFLICT DO NOTHING;

-- Tabla de Carteras (subsidiarias de empresas)
CREATE TABLE IF NOT EXISTS public.Carteras(
	"IdCartera" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"IdEmpresa" integer NOT NULL,
	"FechaCreacion" timestamptz DEFAULT now() NOT NULL,
	"RazonSocial" varchar(64) NOT NULL,
	"NombreComercial" varchar(64) NOT NULL,
	"NombreParaMostrar" varchar(64) NULL,
	"RNC" varchar(20) NOT NULL,
	"Direccion" varchar(128) NOT NULL,
	"Telefono" varchar(256) NULL,
	"Presidente" varchar(64) NOT NULL,
	"CedulaPresidente" varchar(32) NOT NULL,
	"Tasa" numeric(8,4) NOT NULL DEFAULT 0,
	"Mora" numeric(8,4) NOT NULL DEFAULT 0,
	"Cuotas" integer NOT NULL DEFAULT 12,
	"GastoCierre" numeric(8,2) NOT NULL DEFAULT 0,
	"ContadorCuentas" integer NOT NULL DEFAULT 0,
	"ContadorPrestamos" integer NOT NULL DEFAULT 0,
	"ContadorRecibos" integer NOT NULL DEFAULT 0,
	"SufijoCartera" varchar(20) NOT NULL DEFAULT '',
	"Banco" varchar(64) NOT NULL DEFAULT '',
	"NoCuenta" varchar(20) NOT NULL DEFAULT '',
	"RegID" uuid DEFAULT gen_random_uuid() NOT NULL,
	"PorcientoPagoMinimo" numeric(6,2) NOT NULL DEFAULT 0,
	"Penalidad" numeric(5,4) NOT NULL DEFAULT 0,
	"MaxAbonoSobreCapital" numeric(5,4) NOT NULL DEFAULT 1,
	"MinAbonoSobreCapital" numeric(5,4) NOT NULL DEFAULT 0,
	"Activo" boolean NOT NULL DEFAULT true,
	CONSTRAINT "PK_Carteras" PRIMARY KEY ("IdCartera")
);

-- Tabla de Cotizaciones
CREATE TABLE IF NOT EXISTS public.Cotizaciones(
	"IdCotizacion" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"IdUsuario" integer NOT NULL,
	"Fecha" timestamptz NOT NULL,
	"Capital" numeric(18,2) NOT NULL,
	"Interes" numeric(6,4) NOT NULL,
	"Cuotas" integer NOT NULL,
	"GastoCierre" numeric(18,2) NOT NULL,
	"FrecuenciaPago" integer NOT NULL,
	"IdTipoPrestamo" integer NOT NULL,
	"DescripcionGarantia" text NOT NULL,
	"RegID" uuid DEFAULT gen_random_uuid() NOT NULL,
	CONSTRAINT "PK_Cotizaciones" PRIMARY KEY ("IdCotizacion")
);

-- Habilitar RLS en las nuevas tablas
ALTER TABLE public.Auditorias ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.Bancos ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.Carteras ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.Cotizaciones ENABLE ROW LEVEL SECURITY;

-- Políticas de seguridad
CREATE POLICY "Solo usuarios autenticados pueden ver auditorías" ON public.Auditorias
  FOR SELECT USING (auth.uid() IS NOT NULL);

CREATE POLICY "Solo usuarios autenticados pueden crear auditorías" ON public.Auditorias
  FOR INSERT WITH CHECK (auth.uid() IS NOT NULL);

CREATE POLICY "Bancos son visibles para usuarios autenticados" ON public.Bancos
  FOR SELECT USING (auth.uid() IS NOT NULL);

CREATE POLICY "Carteras visibles para usuarios autenticados" ON public.Carteras
  FOR SELECT USING (auth.uid() IS NOT NULL);

CREATE POLICY "Usuarios pueden crear carteras" ON public.Carteras
  FOR INSERT WITH CHECK (auth.uid() IS NOT NULL);

CREATE POLICY "Usuarios pueden actualizar carteras" ON public.Carteras
  FOR UPDATE USING (auth.uid() IS NOT NULL);

CREATE POLICY "Cotizaciones visibles para usuarios autenticados" ON public.Cotizaciones
  FOR SELECT USING (auth.uid() IS NOT NULL);

CREATE POLICY "Usuarios pueden crear cotizaciones" ON public.Cotizaciones
  FOR INSERT WITH CHECK (auth.uid() IS NOT NULL);

-- Agregar relaciones
ALTER TABLE public.Carteras ADD CONSTRAINT "FK_Carteras_Empresas" 
  FOREIGN KEY ("IdEmpresa") REFERENCES public.Empresas ("IdEmpresa");