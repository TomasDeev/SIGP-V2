-- Tabla de Cuentas (Clientes/Deudores)
CREATE TABLE IF NOT EXISTS public.Cuentas(
	"IdCuenta" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"IdEmpresa" integer NOT NULL,
	"Nombres" varchar(64) NOT NULL,
	"Apellidos" varchar(64) NOT NULL,
	"Cedula" varchar(20) NOT NULL,
	"Telefono" varchar(20) NULL,
	"Celular" varchar(20) NULL,
	"Email" varchar(64) NULL,
	"Direccion" varchar(256) NULL,
	"Sector" varchar(64) NULL,
	"Nacionalidad" varchar(32) NOT NULL DEFAULT 'Dominicana',
	"LugarNacimiento" varchar(64) NULL,
	"FechaNacimiento" date NULL,
	"EstadoCivil" integer NOT NULL DEFAULT 1,
	"Profesion" varchar(64) NULL,
	"LugarTrabajo" varchar(128) NULL,
	"DireccionTrabajo" varchar(256) NULL,
	"TelefonoTrabajo" varchar(20) NULL,
	"Ingresos" numeric(18,2) NOT NULL DEFAULT 0,
	"TiempoTrabajo" varchar(32) NULL,
	"Observaciones" text NULL,
	"FechaIngreso" timestamptz DEFAULT now() NOT NULL,
	"RegID" uuid DEFAULT gen_random_uuid() NOT NULL,
	"Activo" boolean NOT NULL DEFAULT true,
	CONSTRAINT "PK_Cuentas" PRIMARY KEY ("IdCuenta")
);

-- Tabla principal de Préstamos
CREATE TABLE IF NOT EXISTS public.Prestamos(
	"IdPrestamo" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"Prefijo" varchar(16) NOT NULL DEFAULT 'P-',
	"PrestamoNo" integer NOT NULL,
	"IdEmpresa" integer NOT NULL,
	"IdCuenta" integer NOT NULL,
	"IdTipoPrestamo" integer NOT NULL DEFAULT 1,
	"IdEstado" integer NOT NULL DEFAULT 1,
	"FechaCreacion" timestamptz DEFAULT now() NOT NULL,
	"FechaPrimerPago" timestamptz NOT NULL,
	"CapitalPrestado" numeric(18,2) NOT NULL,
	"Interes" numeric(9,6) NOT NULL DEFAULT 0,
	"InteresMora" numeric(9,6) NOT NULL DEFAULT 0,
	"FrecuenciaPago" integer NOT NULL DEFAULT 30,
	"Cuotas" integer NOT NULL,
	"DiasGraciaMora" integer NOT NULL DEFAULT 0,
	"GastoCierre" numeric(18,2) NOT NULL DEFAULT 0,
	"GastoSeguro" numeric(18,2) NOT NULL DEFAULT 0,
	"Moneda" integer NOT NULL DEFAULT 1,
	"Observaciones" text NULL,
	"RegID" uuid DEFAULT gen_random_uuid() NOT NULL,
	CONSTRAINT "PK_Prestamos" PRIMARY KEY ("IdPrestamo")
);

-- Tabla de Garantías
CREATE TABLE IF NOT EXISTS public.Garantias(
	"IdGarantia" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	"IdPrestamo" integer NOT NULL,
	"GarantiaTipo" integer NOT NULL DEFAULT 1,
	"Descripcion" text NULL,
	"ValorGarantia" numeric(18,2) NOT NULL DEFAULT 0,
	-- Campos específicos para vehículos
	"Placa" varchar(32) NULL,
	"Matricula" varchar(32) NULL,
	"FechaMatricula" timestamptz NULL,
	"Marca" varchar(64) NULL,
	"Modelo" varchar(64) NULL,
	"Color" varchar(50) NULL,
	"FabricacionFecha" integer NULL,
	"NumeroMotor" varchar(32) NULL,
	"NumeroChasis" varchar(64) NULL,
	"Tipo" varchar(64) NULL,
	"RegID" uuid DEFAULT gen_random_uuid() NOT NULL,
	CONSTRAINT "PK_Garantias" PRIMARY KEY ("IdGarantia")
);

-- Habilitar RLS en las nuevas tablas
ALTER TABLE public.Cuentas ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.Prestamos ENABLE ROW LEVEL SECURITY;
ALTER TABLE public.Garantias ENABLE ROW LEVEL SECURITY;

-- Políticas de seguridad para las nuevas tablas
CREATE POLICY "Cuentas visibles para usuarios autenticados" ON public.Cuentas
  FOR SELECT USING (auth.uid() IS NOT NULL);

CREATE POLICY "Usuarios pueden crear cuentas" ON public.Cuentas
  FOR INSERT WITH CHECK (auth.uid() IS NOT NULL);

CREATE POLICY "Usuarios pueden actualizar cuentas" ON public.Cuentas
  FOR UPDATE USING (auth.uid() IS NOT NULL);

CREATE POLICY "Préstamos visibles para usuarios autenticados" ON public.Prestamos
  FOR SELECT USING (auth.uid() IS NOT NULL);

CREATE POLICY "Usuarios pueden crear préstamos" ON public.Prestamos
  FOR INSERT WITH CHECK (auth.uid() IS NOT NULL);

CREATE POLICY "Usuarios pueden actualizar préstamos" ON public.Prestamos
  FOR UPDATE USING (auth.uid() IS NOT NULL);

CREATE POLICY "Garantías visibles para usuarios autenticados" ON public.Garantias
  FOR SELECT USING (auth.uid() IS NOT NULL);

CREATE POLICY "Usuarios pueden crear garantías" ON public.Garantias
  FOR INSERT WITH CHECK (auth.uid() IS NOT NULL);

CREATE POLICY "Usuarios pueden actualizar garantías" ON public.Garantias
  FOR UPDATE USING (auth.uid() IS NOT NULL);